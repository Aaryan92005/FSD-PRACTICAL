services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: grocery-erp-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: grocery-erp
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - grocery-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./grocery-erp-backend
      dockerfile: Dockerfile
    container_name: grocery-erp-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/grocery-erp?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - grocery-network
    volumes:
      - ./logs/backend:/app/logs

  # Frontend React App
  frontend:
    build:
      context: ./grocery-erp-frontend
      dockerfile: Dockerfile
    container_name: grocery-erp-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - grocery-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: grocery-erp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - grocery-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer (optional for scaling)
  nginx:
    image: nginx:alpine
    container_name: grocery-erp-nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - grocery-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  grocery-network:
    driver: bridge
